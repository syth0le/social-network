version: "3.9"

services:
  backend:
    container_name: "app"
    build:
      context: .
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DB_PASSWORD=${DB_PASSWORD}
      - PORT=8000
      - JWT_TOKEN_SALT=${JWT_TOKEN_SALT}
    depends_on:
      - master
      - slave
    volumes:
      - .:/app
  master:
    image: postgres:latest
    container_name: "db"
    networks:
      new:
        aliases:
          - database
    env_file:
      - .env.example
    volumes:
      - ./master/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=social-network-local
      - POSTGRES_NAME=social-network-local
      - POSTGRES_USER=social-network-local-admin
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d qtr_portal -U qtr_portal" ]
      interval: 5s
      retries: 5
    restart: always
  slave:
    image: postgres:latest
    container_name: "db"
    networks:
      new:
        aliases:
          - database
    env_file:
      - .env.example
    volumes:
      - ./slave/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=social-network-local
      - POSTGRES_NAME=social-network-local
      - POSTGRES_USER=social-network-local-admin
      - POSTGRES_MASTER_HOST=master
      - POSTGRES_MASTER_PORT=5432
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d qtr_portal -U qtr_portal" ]
      interval: 5s
      retries: 5
    depends_on:
      - master
    restart: always

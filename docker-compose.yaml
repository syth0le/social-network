version: "3.9"

services:
  backend:
    container_name: "app"
    build:
      context: .
    command: "/usr/local/bin/social-network --config=/usr/src/app/cmd/social-network/local_config.yaml"
    restart: always
    ports:
      - "8080:8080"
      - "8081:8081"
    env_file:
      - .env.example
    environment:
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_TOKEN_SALT=${JWT_TOKEN_SALT}
    depends_on:
      - master
      - migrate
    volumes:
      - .:/usr/src/app
    networks:
      - mynet
  master:
    image: postgres:latest
    container_name: "master"
    env_file:
      - .env.example
    volumes:
      - postgres-db-master:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=social-network-local
      - POSTGRES_NAME=social-network-local
      - POSTGRES_USER=social-network-local-admin
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "6432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    networks:
      - mynet
  migrate:
    image: migrate/migrate
    container_name: "migrate"
    command: ["-path", "/migrations", "-database",  "postgresql://social-network-local-admin:eephayl3eaph8Xo@master:5432/social-network-local?sslmode=disable", "up"]
    networks:
      - mynet
    depends_on:
      master:
        condition: service_healthy # needful setting which wait available postgres host
    volumes:
      - ./migrations:/migrations
#  slave:
#    image: postgres:latest
#    container_name: "slave"
#    env_file:
#      - .env.example
#    volumes:
#      - postgres-db-slave:/var/lib/postgresql/data
#    environment:
#      - POSTGRES_DB=social-network-local
#      - POSTGRES_NAME=social-network-local
#      - POSTGRES_USER=social-network-local-admin
#      - POSTGRES_MASTER_HOST=master
#      - POSTGRES_MASTER_PORT=6432
#      - POSTGRES_PASSWORD=${DB_PASSWORD}
#    ports:
#      - "7432:5432"
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#      start_period: 10s
#    depends_on:
#      - master
#    restart: always
#    networks:
#      - mynet

volumes:
  postgres-db-master:
  postgres-db-slave:

networks:
  mynet:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.1.0/24